// Code generated by MockGen. DO NOT EDIT.
// Source: contract.go

// Package mock_robotbroker is a generated GoMock package.
package mock_robotbroker

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	nats "github.com/nats-io/nats.go"
)

// MockRobotBrokerInterface is a mock of RobotBrokerInterface interface.
type MockRobotBrokerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRobotBrokerInterfaceMockRecorder
}

// MockRobotBrokerInterfaceMockRecorder is the mock recorder for MockRobotBrokerInterface.
type MockRobotBrokerInterfaceMockRecorder struct {
	mock *MockRobotBrokerInterface
}

// NewMockRobotBrokerInterface creates a new mock instance.
func NewMockRobotBrokerInterface(ctrl *gomock.Controller) *MockRobotBrokerInterface {
	mock := &MockRobotBrokerInterface{ctrl: ctrl}
	mock.recorder = &MockRobotBrokerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRobotBrokerInterface) EXPECT() *MockRobotBrokerInterfaceMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockRobotBrokerInterface) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockRobotBrokerInterfaceMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockRobotBrokerInterface)(nil).Close))
}

// CreateNewJetStream mocks base method.
func (m *MockRobotBrokerInterface) CreateNewJetStream() (nats.JetStreamContext, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewJetStream")
	ret0, _ := ret[0].(nats.JetStreamContext)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNewJetStream indicates an expected call of CreateNewJetStream.
func (mr *MockRobotBrokerInterfaceMockRecorder) CreateNewJetStream() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewJetStream", reflect.TypeOf((*MockRobotBrokerInterface)(nil).CreateNewJetStream))
}
